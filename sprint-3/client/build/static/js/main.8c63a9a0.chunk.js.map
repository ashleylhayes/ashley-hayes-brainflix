{"version":3,"sources":["assets/Logo/Logo-brainflix.svg","assets/Icons/SVG/Icon-search.svg","assets/Icons/SVG/Icon-upload.svg","components/Header/Header.jsx","components/CommentsForm/CommentsForm.jsx","components/Comment/Comment.jsx","components/SideVideo/SideVideo.jsx","assets/Icons/SVG/Icon-play.svg","assets/Icons/SVG/Icon-fullscreen.svg","assets/Icons/SVG/Icon-volume.svg","assets/Icons/SVG/Icon-views.svg","assets/Icons/SVG/Icon-likes.svg","components/CurrentVideo/CurrentVideo.jsx","assets/Images/Upload-video-preview.jpg","components/VideoUpload/VideoUpload.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","src","logo","alt","type","searchIcon","name","placeholder","uploadIcon","CommentsForm","required","React","Component","Comment","this","props","date","comment","SideVideo","image","title","channel","URL","CurrentVideo","state","currentVideoContent","commentsContent","sideVideoContent","axios","get","then","data","setState","comments","catch","error","console","log","prevProps","prevState","match","ID","params","id","poster","playIcon","duration","expandIcon","volumeIcon","Date","timestamp","toLocaleDateString","viewsIcon","views","likesIcon","likes","description","length","map","content","filter","VideoUpload","addVideo","event","preventDefault","uploadedVideo","uuidv4","target","value","uploadThumbnail","video","now","post","response","window","location","replace","onSubmit","App","path","exact","component","render","routeProps","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"mYAAe,G,YAAA,IAA0B,4CCA1B,MAA0B,wCCA1B,MAA0B,wC,OC6B1BA,MAtBf,WACI,OACI,yBAAQC,UAAU,SAAlB,UACI,8BACI,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,oBAAvB,SACI,qBAAKA,UAAU,eAAeE,IAAKC,EAAMC,IAAI,kJAGrD,uBAAOC,KAAK,SAASH,IAAKI,EAAYC,KAAK,SAASC,YAAY,SAASR,UAAU,sBACnF,wBAAQA,UAAU,wBAAlB,SACI,cAAC,IAAD,CAAMC,GAAG,eAAeD,UAAU,6BAAlC,SACI,gCACA,qBAAKA,UAAU,sBAAsBE,IAAKO,EAAYL,IAAI,mBAC1D,mBAAGJ,UAAU,sBAAb,2BAIR,qBAAKA,UAAU,iCCJZU,G,kKAhBX,WACI,OACI,sBAAKV,UAAU,wCAAf,UACI,qBAAKA,UAAU,kCAAf,SACI,qBAAKA,UAAU,kCAEnB,uBAAMO,KAAK,eAAeP,UAAU,8BAApC,UACI,uBAAOA,UAAU,oCAAjB,mCACA,0BAAUA,UAAU,oCAAoCO,KAAK,UAAUC,YAAY,qBAAqBG,UAAQ,IAChH,wBAAQX,UAAU,qCAAlB,+B,GAVOY,IAAMC,YCkBlBC,G,kKAjBX,WACI,MAA4BC,KAAKC,MAA5BT,EAAL,EAAKA,KAAMU,EAAX,EAAWA,KAAMC,EAAjB,EAAiBA,QACjB,OACI,sBAAKlB,UAAU,yBAAf,UACI,qBAAKA,UAAU,0CAAf,SACI,qBAAKA,UAAU,0CAEnB,sBAAKA,UAAU,wCAAf,UACI,mBAAGA,UAAU,8BAAb,SAA4CO,IAC5C,mBAAGP,UAAU,8BAAb,SAA4CiB,IAC5C,mBAAGjB,UAAU,iCAAb,SAA+CkB,c,GAX7CN,IAAMC,YCiBbM,G,kKAhBX,WACI,MAA8BJ,KAAKC,MAA9BI,EAAL,EAAKA,MAAOC,EAAZ,EAAYA,MAAOC,EAAnB,EAAmBA,QACnB,OACI,sBAAKtB,UAAU,yBAAf,UACI,qBAAKA,UAAU,yCAAf,SACI,qBAAKA,UAAU,+BAA+BE,IAAKkB,EAAOhB,IAAI,OAElE,sBAAKJ,UAAU,wCAAf,UACI,mBAAGA,UAAU,+BAAb,SAA6CqB,IAC7C,mBAAGrB,UAAU,iCAAb,SAA+CsB,c,GAV3CV,IAAMC,YCHf,MAA0B,sCCA1B,MAA0B,4CCA1B,MAA0B,wCCA1B,MAA0B,uCCA1B,MAA0B,uC,iBCcnCU,EAAM,kDAuHGC,E,4MApHXC,MAAQ,CACJC,oBAAqB,GACrBC,gBAAiB,GACjBC,iBAAkB,I,uDAGtB,WAAqB,IAAD,OAEhBC,IAAMC,IAAIP,EADC,gBAEVQ,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACL,EAAKC,SAAS,CACVP,oBAAqBM,EACrBL,gBAAiBK,EAAKE,cAG7BC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAE5BP,IAAMC,IAAIP,GACTQ,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACL,EAAKC,SAAS,CACVL,iBAAkBI,OAGzBG,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,Q,gCAGhC,SAAmBG,EAAWC,GAAY,IAAD,OAC7BC,EAAU1B,KAAKC,MAAfyB,MACFC,EAAKD,EAAME,OAAOC,GAAKH,EAAME,OAAOC,GAAK,eAC3CH,EAAME,OAAOC,KAAO7B,KAAKU,MAAMC,oBAAoBkB,IACnDf,IAAMC,IAAIP,EAAMmB,GACfX,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACL,EAAKC,SAAS,CACVP,oBAAqBM,EACrBL,gBAAiBK,EAAKE,cAG7BC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,Q,oBAIpC,WAAU,IAAD,OACL,OACI,gCACA,cAAC,EAAD,IACA,0BAASpC,UAAU,gBAAnB,UACI,uBAAOA,UAAU,uBAAuB6C,OAAQ9B,KAAKU,MAAMC,oBAAoBN,QAC/E,sBAAKpB,UAAU,oCAAf,UACI,qBAAKA,UAAU,sBAAf,SACA,qBAAKA,UAAU,2BAA2BE,IAAK4C,EAAU1C,IAAI,sBAE7D,sBAAKJ,UAAU,0BAAf,UACI,qBAAKA,UAAU,iCACf,oBAAGA,UAAU,+BAAb,oBAAoDe,KAAKU,MAAMC,oBAAoBqB,eAEvF,sBAAK/C,UAAU,+BAAf,UACI,qBAAKA,UAAU,wBAAwBE,IAAK8C,EAAY5C,IAAI,sBAC5D,qBAAKJ,UAAU,wBAAwBE,IAAK+C,EAAY7C,IAAI,sBAGpE,uBAAMJ,UAAU,qBAAhB,UACI,sBAAKA,UAAU,0BAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,oBAAIA,UAAW,uBAAf,SAAuCe,KAAKU,MAAMC,oBAAoBL,QACtE,oBAAGrB,UAAU,0BAAb,gBAA2Ce,KAAKU,MAAMC,oBAAoBJ,WAC1E,mBAAGtB,UAAU,sBAAb,SAAoC,IAAIkD,KAAKnC,KAAKU,MAAMC,oBAAoByB,WAAWC,mBAAmB,WAC1G,sBAAKpD,UAAU,iCAAf,UACI,qBAAKA,UAAU,4BAA4BE,IAAKmD,EAAWjD,IAAI,uBAC/D,mBAAGJ,UAAU,4BAAb,SAA0Ce,KAAKU,MAAMC,oBAAoB4B,WAE7E,sBAAKtD,UAAU,iCAAf,UACI,qBAAKA,UAAU,4BAA4BE,IAAKqD,EAAWnD,IAAI,yBAC/D,mBAAGJ,UAAU,4BAAb,SAA0Ce,KAAKU,MAAMC,oBAAoB8B,cAGjF,qBAAKxD,UAAU,uCAAf,SACI,mBAAGA,UAAU,6BAAb,SAA2Ce,KAAKU,MAAMC,oBAAoB+B,gBAE9E,sBAAKzD,UAAU,oCAAf,UACI,oBAAGA,UAAU,iCAAb,UAA+Ce,KAAKU,MAAME,gBAAgB+B,OAA1E,eACA,cAAC,EAAD,IACC3C,KAAKU,MAAME,gBAAgBgC,KAAI,SAACC,GAAD,OAC5B,cAAC,EAAD,CAEIrD,KAAMqD,EAAQrD,KACdU,KAAM,IAAIiC,KAAKU,EAAQT,WAAWC,mBAAmB,SACrDlC,QAAS0C,EAAQ1C,SAHZ0C,EAAQhB,aAQ7B,8BACI,0BAAS5C,UAAU,wBAAnB,UACI,mBAAGA,UAAU,oBAAb,wBACA,8BACKe,KAAKU,MAAMG,iBAAiBiC,QAAO,SAACD,GACjC,OAAOA,EAAQhB,KAAO,EAAKnB,MAAMC,oBAAoBkB,MACtDe,KAAI,SAACC,GAAD,OACP,cAAC,IAAD,CAAM5D,UAAU,mBAAoCC,GAAE,WAAM2D,EAAQhB,IAApE,SACI,cAAC,EAAD,CAEIxB,MAAOwC,EAAQxC,MACfC,MAAOuC,EAAQvC,MACfC,QAASsC,EAAQtC,SAHZsC,EAAQhB,KAFmBgB,EAAQhB,2B,GAnGrDhC,IAAMC,WChBlB,G,MAAA,IAA0B,kD,QCOnCU,EAAM,kDAgGGuC,E,4MA5FXC,SAAW,SAACC,GACRA,EAAMC,iBACN,IAAMC,EAAgB,CAClBtB,GAAIuB,cACJ9C,MAAO2C,EAAMI,OAAO/C,MAAMgD,MAC1B/C,QAAS,eACTF,MAAOkD,EACPb,YAAaO,EAAMI,OAAOX,YAAYY,MACtCf,MAAO,QACPE,MAAO,KACPT,SAAU,OACVwB,MAAO,6CACPpB,UAAWD,KAAKsB,MAChBtC,SAAU,CACN,CACI,KAAQ,gBACR,QAAW,+KACX,GAAM,uCACN,MAAS,EACT,UAAa,cAEjB,CACI,KAAQ,YACR,QAAW,kLACX,GAAM,uCACN,MAAS,EACT,UAAa,eAEjB,CACI,KAAQ,kBACR,QAAW,gLACX,GAAM,uCACN,MAAS,EACT,UAAa,iBAKzBG,QAAQC,IAAI4B,GAEZrC,IAAM4C,KAAKlD,EAAK2C,GACfnC,MAAM,SAAA2C,GACHrC,QAAQC,IAAIoC,MAEfvC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAGhBuC,OAAOC,SAASC,QAAQtD,I,4CAK5B,WACI,OACI,qCACI,8BACI,cAAC,EAAD,MAEJ,qBAAKvB,UAAU,0BACf,sBAAKA,UAAU,eAAf,UACI,oBAAIA,UAAU,sBAAd,0BACA,uBAAM8E,SAAU/D,KAAKgD,SAAU/D,UAAU,qBAAzC,UACI,sBAAKA,UAAU,iCAAf,UACI,gCACI,mBAAGA,UAAU,gCAAb,6BACA,qBAAKA,UAAU,oCAAf,SACI,qBAAKA,UAAU,0BAA0BE,IAAKoE,EAAiBlE,IAAI,yBAG3E,gCACI,mBAAGJ,UAAU,kCAAb,8BACA,uBAAOK,KAAK,OAAOE,KAAK,QAAQP,UAAU,kCAAkCQ,YAAY,8BACxF,mBAAGR,UAAU,wCAAb,qCACA,0BAAUK,KAAK,OAAOE,KAAK,cAAcP,UAAU,kCAAkCQ,YAAY,0CAGzG,sBAAKR,UAAU,iCAAf,UACI,wBAAQA,UAAU,+BAAlB,qBAGA,wBAAQA,UAAU,8BAAlB,oC,GAnFFY,IAAMC,WCUjBkE,MAdf,WACE,OACE,qBAAK/E,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgF,KAAK,IAAIC,OAAK,EAACC,UAAW1D,IACjC,cAAC,IAAD,CAAOwD,KAAK,eAAeE,UAAWpB,IACtC,cAAC,IAAD,CAAOkB,KAAK,OAAOG,OAAQ,SAACC,GAAD,OAAgB,cAAC,EAAD,eAAkBA,eCAnDC,QACW,cAA7BV,OAAOC,SAASU,UAEe,UAA7BX,OAAOC,SAASU,UAEhBX,OAAOC,SAASU,SAAS7C,MACvB,2DCZN8C,IAASJ,OACP,cAAC,IAAMK,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9D,MAAK,SAAA+D,GACJA,EAAaC,gBAEd5D,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAM4D,c","file":"static/js/main.8c63a9a0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Logo-brainflix.0153380c.svg\";","export default __webpack_public_path__ + \"static/media/Icon-search.6b9e4c56.svg\";","export default __webpack_public_path__ + \"static/media/Icon-upload.f7a2b889.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './header.scss';\nimport logo from '../../assets/Logo/Logo-brainflix.svg';\nimport searchIcon from '../../assets/Icons/SVG/Icon-search.svg';\nimport uploadIcon from '../../assets/Icons/SVG/Icon-upload.svg';\n\nfunction Header() {\n    return (\n        <header className='header'>\n            <div>\n                <Link to=\"/\" className=\"header__logo-link\">\n                    <img className='header__logo' src={logo} alt='logo with blue square with a white arrow inside, representing a play button. The word BrainFlix is written in black to the right of that.' />\n                </Link>\n            </div>\n            <input type=\"search\" src={searchIcon} name=\"search\" placeholder=\"Search\" className='header__searchbar'/>\n            <button className='header__upload-button'>\n                <Link to=\"/videoupload\" className=\"header__upload-button-link\">\n                    <div>\n                    <img className='header__upload-icon' src={uploadIcon} alt='plus sign icon'/>\n                    <p className='header__upload-text'>UPLOAD</p>\n                    </div>\n                </Link>\n            </button>\n            <div className='header__avatar-container'></div>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport './commentsForm.scss'\n\nclass CommentsForm extends React.Component {\n    render() {\n        return (\n            <div className='current-video__comment-form-container'>\n                <div className='current-video__avatar-container'>\n                    <div className='current-video__avatar-image'></div>\n                </div>\n                <form name='commentsForm' className='current-video__comment-form'>\n                    <label className='current-video__comment-form-title'>JOIN THE CONVERSATION</label>\n                    <textarea className='current-video__comment-form-input' name='comment' placeholder='Write comment here' required></textarea>\n                    <button className='current-video__comment-form-button'>COMMENT</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default CommentsForm;","import React from 'react';\nimport './comment.scss'\n\nclass Comment extends React.Component {\n    render() {\n        let {name, date, comment} = this.props;\n        return (\n            <div className='current-video__comment'>\n                <div className='current-video__comment-avatar-container'>\n                    <div className='current-video__comment-avatar-image'></div>\n                </div>\n                <div className='current-video__comment-info-container'>\n                    <p className='current-video__comment-name'>{name}</p>\n                    <p className='current-video__comment-date'>{date}</p>\n                    <p className='current-video__comment-comment'>{comment}</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Comment;","import React from 'react';\nimport './sideVideo.scss'\n\nclass SideVideo extends React.Component {\n    render() {\n        let {image, title, channel} = this.props;\n        return (\n            <div className='next-video__side-video'>\n                <div className='next-video__side-video-image-container'>\n                    <img className='next-video__side-video-image' src={image} alt=\"\" />\n                </div>\n                <div className='next-video__side-video-info-container'>\n                    <p className='next-video__side-video-title'>{title}</p>\n                    <p className='next-video__side-video-account'>{channel}</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SideVideo;","export default __webpack_public_path__ + \"static/media/Icon-play.1a5961d4.svg\";","export default __webpack_public_path__ + \"static/media/Icon-fullscreen.1d9f48e9.svg\";","export default __webpack_public_path__ + \"static/media/Icon-volume.dffff5ec.svg\";","export default __webpack_public_path__ + \"static/media/Icon-views.84be3383.svg\";","export default __webpack_public_path__ + \"static/media/Icon-likes.e870740b.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './currentVideo.scss';\nimport Header from '../Header/Header';\nimport CommentsForm from '../CommentsForm/CommentsForm';\nimport Comment from '../Comment/Comment';\nimport SideVideo from '../SideVideo/SideVideo';\nimport playIcon from '../../assets/Icons/SVG/Icon-play.svg';\nimport expandIcon from '../../assets/Icons/SVG/Icon-fullscreen.svg';\nimport volumeIcon from '../../assets/Icons/SVG/Icon-volume.svg';\nimport viewsIcon from '../../assets/Icons/SVG/Icon-views.svg';\nimport likesIcon from '../../assets/Icons/SVG/Icon-likes.svg';\nimport axios from 'axios';\n\nconst URL = \"https://fast-plains-50193.herokuapp.com/videos/\";\n\nclass CurrentVideo extends React.Component {\n    state = {\n        currentVideoContent: [],\n        commentsContent: [],\n        sideVideoContent: []\n    };\n\n    componentDidMount() {\n        const ID = '1af0jruup5gu';\n        axios.get(URL + ID)\n        .then(({ data }) => {\n            this.setState({\n                currentVideoContent: data,\n                commentsContent: data.comments\n            });\n        })\n        .catch(error => console.log(error));\n\n        axios.get(URL)\n        .then(({ data }) => {\n            this.setState({\n                sideVideoContent: data\n            });\n        })\n        .catch(error => console.log(error));\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        const { match } = this.props;\n        const ID = match.params.id ? match.params.id : '1af0jruup5gu';\n        if (match.params.id !== this.state.currentVideoContent.id) {\n            axios.get(URL + ID)\n            .then(({ data }) => {\n                this.setState({\n                    currentVideoContent: data,\n                    commentsContent: data.comments\n                });\n            })\n            .catch(error => console.log(error));\n        };\n    };\n\n    render() {\n        return (\n            <div>\n            <Header />\n            <section className='current-video'>\n                <video className='current-video__video' poster={this.state.currentVideoContent.image}></video>\n                <div className='current-video__controls-container'>\n                    <div className='current-video__play'>\n                    <img className='current-video__play-icon' src={playIcon} alt='play arrow icon' />\n                    </div>\n                    <div className='current-video__scrubber'>\n                        <div className='current-video__scrubber-line'></div>\n                        <p className='current-video__scrubber-time'>0:00 / {this.state.currentVideoContent.duration}</p>\n                    </div>\n                    <div className='current-video__expand-volume'>\n                        <img className='current-video__expand' src={expandIcon} alt='expand video icon' />\n                        <img className='current-video__volume' src={volumeIcon} alt='volume icon' />\n                    </div>\n                </div>\n                <main className='current-video__all'>\n                    <div className='current-video__all-info'>\n                        <div className='current-video__details'>\n                            <h1 className= 'current-video__title'>{this.state.currentVideoContent.title}</h1>\n                            <p className='current-video__uploader'>By {this.state.currentVideoContent.channel}</p>\n                            <p className='current-video__date'>{new Date(this.state.currentVideoContent.timestamp).toLocaleDateString(\"en-US\")}</p>\n                            <div className='current-video__tally-container'>\n                                <img className='current-video__tally-icon' src={viewsIcon} alt='eye icon for views' />\n                                <p className='current-video__tally-text'>{this.state.currentVideoContent.views}</p>\n                            </div>\n                            <div className='current-video__tally-container'>\n                                <img className='current-video__tally-icon' src={likesIcon} alt='heart icon for likes' />\n                                <p className='current-video__tally-text'>{this.state.currentVideoContent.likes}</p>\n                            </div>\n                        </div>\n                        <div className='current-video__description-container'>\n                            <p className='current-video__description'>{this.state.currentVideoContent.description}</p>\n                        </div>\n                        <div className='current-video__comments-container'>\n                            <p className='current-video__comments-number'>{this.state.commentsContent.length} Comments</p>\n                            <CommentsForm />\n                            {this.state.commentsContent.map((content) => \n                                <Comment \n                                    key={content.id} \n                                    name={content.name} \n                                    date={new Date(content.timestamp).toLocaleDateString(\"en-US\")} \n                                    comment={content.comment} \n                                />\n                            )}\n                        </div>\n                    </div>\n                    <div>\n                        <section className='next-video__container'>\n                            <p className='next-video__title'>NEXT VIDEO</p>\n                            <div>\n                                {this.state.sideVideoContent.filter((content) => {\n                                    return content.id !== this.state.currentVideoContent.id;\n                                }).map((content) => \n                                <Link className=\"next-video__link\" key={content.id} to={`/${content.id}`}>\n                                    <SideVideo \n                                        key={content.id} \n                                        image={content.image} \n                                        title={content.title} \n                                        channel={content.channel} \n                                    />\n                                </Link>)}\n                            </div>\n                        </section>\n                    </div>\n                </main>\n            </section>\n            </div>\n        );\n    };\n};\n\nexport default CurrentVideo;","export default __webpack_public_path__ + \"static/media/Upload-video-preview.313a407c.jpg\";","import React from 'react';\nimport Header from '../Header/Header';\nimport './videoUpload.scss'\nimport uploadThumbnail from '../../assets/Images/Upload-video-preview.jpg';\nimport axios from 'axios';\nimport {v4 as uuidv4} from 'uuid';\n\nconst URL = \"https://fast-plains-50193.herokuapp.com/videos/\";\n\nclass VideoUpload extends React.Component {\n\n    addVideo = (event) => {\n        event.preventDefault()\n        const uploadedVideo = {\n            id: uuidv4(),\n            title: event.target.title.value,\n            channel: \"Mohan Muruge\",\n            image: uploadThumbnail,\n            description: event.target.description.value,\n            views: \"1,377\",\n            likes: \"99\",\n            duration: \"3:33\",\n            video: \"https://project-2-api.herokuapp.com/stream\",\n            timestamp: Date.now(),\n            comments: [\n                {\n                    \"name\": \"Micheal Lyons\",\n                    \"comment\": \"They BLEW the ROOF off at their last show, once everyone started figuring out they were going. This is still simply the greatest opening of acconcert I have EVER witnessed.\",\n                    \"id\": \"1ab6d9f6-da38-456e-9b09-ab0acd9ce818\",\n                    \"likes\": 0,\n                    \"timestamp\": 1545162149000\n                },\n                {\n                    \"name\": \"Gary Wong\",\n                    \"comment\": \"Every time I see him shred I feel so motivated to get off my couch and hop on my board. He’s so talented! I wish I can ride like him one day so I can really enjoy myself!\",\n                    \"id\": \"cc6f173d-9e9d-4501-918d-bc11f15a8e14\",\n                    \"likes\": 0,\n                    \"timestamp\": 1544595784046\n                },\n                {\n                    \"name\": \"Theodore Duncan\",\n                    \"comment\": \"How can someone be so good!!! You can tell he lives for this and loves to do it every day. Everytime I see him I feel instantly happy! He’s definitely my favorite ever!\",\n                    \"id\": \"993f950f-df99-48e7-bd1e-d95003cc98f1\",\n                    \"likes\": 0,\n                    \"timestamp\": 1542262984046\n                }\n            ]\n        }\n        \n        console.log(uploadedVideo)\n\n        axios.post(URL, uploadedVideo)\n        .then (response => {\n            console.log(response)\n        })\n        .catch(error => {\n            console.log(error)\n        })\n\n        window.location.replace(URL)\n    }\n\n\n\n    render(){\n        return (\n            <>\n                <div>\n                    <Header />\n                </div>\n                <div className='upload-video__divider'></div>\n                <div className=\"upload-video\">\n                    <h1 className=\"upload-video__title\">Upload Video</h1>\n                    <form onSubmit={this.addVideo} className=\"upload-video__form\">\n                        <div className=\"upload-video__upload-container\">\n                            <div>\n                                <p className=\"upload-video__thumbnail-title\">VIDEO THUMBNAIL</p>\n                                <div className=\"upload-video__thumbnail-container\">\n                                    <img className=\"upload-video__thumbnail\" src={uploadThumbnail} alt=\"add your upload\" />\n                                </div>\n                            </div>\n                            <div>\n                                <p className=\"upload-video__video-title-label\">TITLE YOUR VIDEO</p>\n                                <input type=\"text\" name=\"title\" className=\"upload-video__video-title-input\" placeholder=\"Add a title to your video\"></input>\n                                <p className=\"upload-video__video-description-label\">ADD A VIDEO DESCRIPTION</p>\n                                <textarea type=\"text\" name=\"description\" className=\"upload-video__video-description\" placeholder=\"Add a description of your video\"></textarea>\n                            </div>\n                        </div>\n                        <div className=\"upload-video__button-container\">\n                            <button className=\"upload-video__publish-button\">\n                                PUBLISH\n                            </button>\n                            <button className=\"upload-video__cancel-button\">\n                                CANCEL\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default VideoUpload","import React from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport CurrentVideo from './components/CurrentVideo/CurrentVideo'\nimport VideoUpload from './components/VideoUpload/VideoUpload';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" exact component={CurrentVideo} />\n          <Route path=\"/videoupload\" component={VideoUpload} />\n          <Route path=\"/:id\" render={(routeProps) => <CurrentVideo {...routeProps} />} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}